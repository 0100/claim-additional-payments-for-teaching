pr: none

pool:
  vmImage: ubuntu-latest

variables:
  - group: docker-settings

stages:
  - stage: ci_build
    displayName: Run tests and publish artifacts
    jobs:
      - job: run_tests
        displayName: Run tests
        steps:
          # Build and run tests
          - script: |
              docker pull $(dockerRegistry)/$(dockerImageName):cache-test-dependencies || true
              docker pull $(dockerRegistry)/$(dockerImageName):cache-test || true

              docker-compose --file=docker-compose.test.yml build
            displayName: Build test Docker image
          - script: docker-compose --file=docker-compose.test.yml run --rm test
            displayName: Run tests on Docker

          # Clean up
          - script: |
              git reset --hard
              git clean -xdf
            displayName: Clean repository
      - job: docker_tasks
        dependsOn: run_tests
        displayName: Docker tasks
        steps:
          - script: docker login -u $(dockerId) -p $pass
            env:
              pass: $(dockerPassword)
            displayName: Login to DockerHub
          - script: |
              ./bin/build-docker-images $(Build.SourceVersion) \
                $(dockerRegistry)/$(dockerImageName) \
                $(Build.BuildNumber)
            displayName: Prepare and push Docker images
            condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
          - script: |
              ./bin/cache-docker-images $(Build.SourceVersion) \
                $(dockerRegistry)/$(dockerImageName) \
                $(Build.BuildNumber)
            displayName: Prepare Docker images for caching
            condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
      - job: publish_repository
        dependsOn: docker_tasks
        displayName: Publish repository
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        steps:
          - publish: $(System.DefaultWorkingDirectory)
            artifact: repository
            displayName: Publish repository as artifact
  - stage: deploy_to_development
    displayName: Deploy to development
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    variables:
      - group: deployment-settings
    jobs:
    - template: azure-deploy-template.yml
      parameters:
        azureSubscription: azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef
        resourceGroupPrefix: s118d01
        environmentName: development
        slackWebhookUrl: $(slackWebhookUrl)
