parameters:
  azureSubscription:
  resourceGroupPrefix:
  environmentName:
  slackWebhookUrl:

jobs:
  - job: run_deploy_script
    displayName: Run deploy script
    steps:
      - task: UseRubyVersion@0
        displayName: 'Use Ruby >= 2.4'
      - task: AzureCLI@1
        displayName: 'Deploy Azure'
        inputs:
          azureSubscription: ${{parameters.azureSubscription}}
          scriptPath: './bin/azure-deploy'
          arguments: '${{parameters.environmentName}} --skip-login --skip-confirmation --docker-tag=$(Build.BuildNumber)'
        env:
          GIT_COMMIT_HASH: $(Release.Artifacts.Build.SourceVersion)
  - job: swap_app_service_slots
    dependsOn: run_deploy_script
    displayName: Swap app service slots
    steps:
      - task: AzureAppServiceManage@0
        displayName: 'Swap Slots: ${{parameters.resourceGroupPrefix}}-app-as'
        inputs:
          azureSubscription: ${{parameters.azureSubscription}}
          WebAppName: '${{parameters.resourceGroupPrefix}}-app-as'
          ResourceGroupName: '${{parameters.resourceGroupPrefix}}-app'
          SourceSlot: staging
      - task: AzureAppServiceManage@0
        displayName: 'Swap Slots: ${{parameters.resourceGroupPrefix}}-app-vsp-as'
        inputs:
          azureSubscription: 'azdo.pipelines.cip.S118T.arm03ce3ff5-9a61-4525-a063-6ecde34874cf'
          WebAppName: '${{parameters.resourceGroupPrefix}}-app-vsp-as'
          ResourceGroupName: '${{parameters.resourceGroupPrefix}}-app'
          SourceSlot: staging
  - job: clean_up
    dependsOn: swap_app_service_slots
    displayName: Clean up
    steps:
      - task: AzureCLI@1
        displayName: 'Delete migration runner container'
        inputs:
          azureSubscription: ${{parameters.azureSubscription}}
          scriptLocation: inlineScript
          inlineScript: 'az container delete --name ${{parameters.resourceGroupPrefix}}-app-migration-runner-aci --resource-group s118t01-app -y'
  - job: send_slack_success_message
    dependsOn: clean_up
    displayName: Send Slack notification
    steps:
      - task: Bash@3
        displayName: 'Send Slack Notification'
        inputs:
          targetType: filePath
          filePath: './$(System.DefaultWorkingDirectory)/Build/repository/bin/slack-alert'
          arguments: '${{parameters.environmentName}} $(Build.BuildNumber) $(Release.ReleaseId) ${{parameters.slackWebhookUrl}} SUCCESS'
  - job: send_slack_failure_message
    displayName: Send Slack failure notification
    condition: failed()
    steps:
      - task: Bash@3
        displayName: 'Send Slack Failure Notification'
        inputs:
          targetType: filePath
          filePath: './$(System.DefaultWorkingDirectory)/Build/repository/bin/slack-alert'
          arguments: '${{parameters.environmentName}} $(Build.BuildNumber) $(Release.ReleaseId) ${{parameters.slackWebhookUrl}} FAILURE'
