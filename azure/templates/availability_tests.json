{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the application insights resource"
      }
    },
    "availabilityTests": {
      "defaultValue": [],
      "type": "array",
      "metadata": {
        "description": "Array of test objects to configure URLs to perform availability tests for."
      }
    },
    "alertEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "Email to send alerts to"
      }
    },
    "webTestLocations": {
      "type": "array",
      "metadata": {
        "description": "The locations to conduct webtests from"
      }
    }
  },
  "variables": {
    "actionGroupName": "[concat(parameters('appInsightsName'), '-ag-down-alert')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "[variables('actionGroupName')]",
      "location": "global",
      "tags": {},
      "properties": {
        "groupShortName": "[concat(split(parameters('appInsightsName'), '-')[0], '-ops')]",
        "enabled": true,
        "useCommonAlertSchema": true,
        "emailReceivers": [
          {
            "name": "email",
            "emailAddress": "[parameters('alertEmailAddress')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[if(greater(length(parameters('availabilityTests')), 0), concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('webTestsCopy')].nameSuffix), 'UNUSED_WEBTEST')]",
      "type": "Microsoft.Insights/webtests",
      "condition": "[greater(length(parameters('availabilityTests')), 0)]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webTestsCopy",
        "count": "[if(greater(length(parameters('availabilityTests')), 0), length(parameters('availabilityTests')), 1)]"
      },
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('appInsightsName')))]": "Resource"
      },
      "properties": {
        "SyntheticMonitorId": "[concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('webTestsCopy')].nameSuffix)]",
        "Name": "[concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('webTestsCopy')].nameSuffix)]",
        "Enabled": true,
        "Frequency": 300,
        "Timeout": 120,
        "RetryEnabled": true,
        "Locations": "[parameters('webTestLocations')]",
        "Kind": "ping",
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"', parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('webTestsCopy')].nameSuffix, '\"',  ' Id=\"', parameters('availabilityTests')[copyIndex('webTestsCopy')].guid,'\"    Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"', replace(parameters('availabilityTests')[copyIndex('webTestsCopy')].url, '&', '&amp;'),'\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
        }
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[if(greater(length(parameters('availabilityTests')), 0), concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix, '-alert'), 'UNUSED_ALERT')]",
      "condition": "[greater(length(parameters('availabilityTests')), 0)]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
        "[resourceId('Microsoft.Insights/webtests', concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceId('microsoft.insights/components', parameters('appInsightsName')))]": "Resource",
        "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix)))]": "Resource"
      },
      "location": "global",
      "copy": {
        "name": "metricAlertsCopy",
        "count": "[if(greater(length(parameters('availabilityTests')), 0), length(parameters('availabilityTests')), 1)]"
      },
      "properties": {
        "name": "[concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix, '-alert')]",
        "description": "[concat('Returns when availability of ', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix ,' is less than 100%')]",
        "severity": 1,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Insights/webtests', concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix))]",
          "[resourceId('microsoft.insights/components', parameters('appInsightsName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT1M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
          "webTestId": "[resourceId('Microsoft.Insights/webtests', concat(parameters('appInsightsName'), '-at-', parameters('availabilityTests')[copyIndex('metricAlertsCopy')].nameSuffix))]",
          "componentId": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
          "failedLocationCount": 1
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
            "webHookProperties": {}
          }
        ]
      }
    }
  ]
}
