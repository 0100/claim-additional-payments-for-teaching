{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webTestName": {
      "type": "string"
    },
    "webTestLocations": {
      "type": "array"
    },
    "appServiceHealthcheckUrl": {
      "type": "string"
    },
    "alertEmailAddress": {
      "type": "string"
    },
    "applicationInsightsId": {
      "type": "string"
    },
    "webTestTimeoutInSeconds": {
      "type": "int",
      "defaultValue": 30
    },
    "webTestExpectedReturnCode": {
      "type": "int",
      "defaultValue": 200
    },
    "webTestAlertFailedLocationCount": {
      "type": "int",
      "defaultValue": 3
    }
  },
  "variables": {
    "webTestAlertName": "[concat(parameters('webTestName'), '-alert')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/webtests",
      "apiVersion": "2015-05-01",
      "name": "[parameters('webTestName')]",
      "kind": "ping",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', parameters('applicationInsightsId'))]": "Resource"
      },
      "properties": {
        "Name": "[parameters('webTestName')]",
        "Enabled": true,
        "SyntheticMonitorId": "[parameters('webTestName')]",
        "Frequency": 60,
        "Timeout": "[parameters('webTestTimeoutInSeconds')]",
        "Kind": "ping",
        "Locations": "[parameters('webTestLocations')]",
        "Configuration": {
          "WebTest": "[concat('<WebTest Name=\"', parameters('webTestName'), '\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"', parameters('webTestTimeoutInSeconds'), '\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\"><Items><Request Method=\"GET\" Version=\"1.1\" Url=\"', parameters('appServiceHealthcheckUrl'), '\" ThinkTime=\"0\" Timeout=\"', parameters('webTestTimeoutInSeconds'), '\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('webTestExpectedReturnCode'), '\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
        }
      }
    },
    {
      "type": "microsoft.insights/alertrules",
      "apiVersion": "2016-03-01",
      "name": "[variables('webTestAlertName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', parameters('applicationInsightsId'))]": "Resource",
        "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', parameters('webTestName')))]": "Resource"
      },
      "dependsOn": ["[resourceId('Microsoft.Insights/webtests', parameters('webTestName'))]"],
      "properties": {
        "name": "[variables('webTestAlertName')]",
        "isEnabled": true,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('Microsoft.Insights/webtests', parameters('webTestName'))]",
            "metricName": "GSMT_AvRaW"
          },
          "windowSize": "PT5M",
          "failedLocationCount": "[min(parameters('webTestAlertFailedLocationCount'), length(parameters('webTestLocations')))]"
        },
        "actions": [
          {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "customEmails": ["[parameters('alertEmailAddress')]"],
            "sendToServiceOwners": false
          }
        ]
      }
    }
  ]
}
