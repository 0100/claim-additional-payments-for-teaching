{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "gitCommitHash": {
      "type": "string"
    },
    "alertActionGroupShortName": {
      "type": "string",
      "defaultValue": "[take(resourceGroup().name, 12)]"
    },
    "alertEmailAddress": {
      "type": "string"
    },
    "appResourceGroupId": {
      "type": "string"
    },
    "secretsResourceGroupId": {
      "type": "string"
    },
    "appServiceId": {
      "type": "string"
    },
    "appServicePlanId": {
      "type": "string"
    },
    "vspAppServiceId": {
      "type": "string"
    },
    "vspAppServicePlanId": {
      "type": "string"
    },
    "databaseServerId": {
      "type": "string"
    }
  },
  "variables": {
    "deploymentUrlBase": "[concat('https://raw.githubusercontent.com/DFE-Digital/dfe-teachers-payment-service/', parameters('gitCommitHash'), '/azure/templates/')]",

    "appAlertsDeploymentName": "[concat(parameters('resourceNamePrefix'), '-app')]",
    "vspAlertsDeploymentName": "[concat(parameters('resourceNamePrefix'), '-vsp')]",

    "alertActionGroupName": "[concat(parameters('resourceNamePrefix'), '-ag')]",

    "alertNamePrefix": "[parameters('resourceNamePrefix')]",

    "serviceHealthAlertName": "[concat(variables('alertNamePrefix'), '-service-health')]",

    "databaseServerName": "[last(split(parameters('databaseServerId'), '/'))]",
    "databaseServerAlertPrefix": "[concat(variables('alertNamePrefix'), '-', variables('databaseServerName'))]",
    "databaseServerHighCpuAlertName": "[concat(variables('databaseServerAlertPrefix'), '-high-cpu')]",
    "databaseServerHighMemoryAlertName": "[concat(variables('databaseServerAlertPrefix'), '-high-memory')]",
    "databaseServerHighStorageAlertName": "[concat(variables('databaseServerAlertPrefix'), '-high-storage')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "[variables('alertActionGroupName')]",
      "location": "global",
      "properties": {
        "groupShortName": "[parameters('alertActionGroupShortName')]",
        "enabled": true,
        "useCommonAlertSchema": true,
        "emailReceivers": [
          {
            "name": "email",
            "emailAddress": "[parameters('alertEmailAddress')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/activityLogAlerts",
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceHealthAlertName')]",
      "location": "global",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "scopes": [
          "[resourceGroup().id]",
          "[parameters('appResourceGroupId')]",
          "[parameters('secretsResourceGroupId')]"
        ],
        "enabled": true,
        "condition": {
          "allOf": [
            {
              "field": "category",
              "equals": "ServiceHealth"
            }
          ]
        },
        "actions": {
          "actionGroups": [
            {
              "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('appAlertsDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app_alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "alertNamePrefix": {
            "value": "[variables('alertNamePrefix')]"
          },
          "actionGroupId": {
            "value": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
          },
          "appServiceId": {
            "value": "[parameters('appServiceId')]"
          },
          "appServicePlanId": {
            "value": "[parameters('appServicePlanId')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('databaseServerHighCpuAlertName')]",
      "location": "global",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "scopes": ["[parameters('databaseServerId')]"],
        "enabled": true,
        "description": "[concat('Alert when average CPU utilization for ', variables('databaseServerName'), ' is greater than 80%.')]",
        "severity": 0,
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "targetResourceType": "Microsoft.DBforPostgreSQL/servers",
        "targetResourceRegion": "[resourceGroup().location]",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "criterionType": "StaticThresholdCriterion",
              "name": "high-cpu",
              "metricNamespace": "Microsoft.DBforPostgreSQL/servers",
              "metricName": "cpu_percent",
              "operator": "GreaterThan",
              "threshold": 80,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('databaseServerHighMemoryAlertName')]",
      "location": "global",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "scopes": ["[parameters('databaseServerId')]"],
        "enabled": true,
        "description": "[concat('Alert when average memory utilization for ', variables('databaseServerName'), ' is greater than 80%.')]",
        "severity": 0,
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "targetResourceType": "Microsoft.DBforPostgreSQL/servers",
        "targetResourceRegion": "[resourceGroup().location]",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "criterionType": "StaticThresholdCriterion",
              "name": "high-memory",
              "metricNamespace": "Microsoft.DBforPostgreSQL/servers",
              "metricName": "memory_percent",
              "operator": "GreaterThan",
              "threshold": 80,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('databaseServerHighStorageAlertName')]",
      "location": "global",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "scopes": ["[parameters('databaseServerId')]"],
        "enabled": true,
        "description": "[concat('Alert when average storage utilization for ', variables('databaseServerName'), ' is greater than 80%.')]",
        "severity": 0,
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "targetResourceType": "Microsoft.DBforPostgreSQL/servers",
        "targetResourceRegion": "[resourceGroup().location]",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "criterionType": "StaticThresholdCriterion",
              "name": "high-storage",
              "metricNamespace": "Microsoft.DBforPostgreSQL/servers",
              "metricName": "storage_percent",
              "operator": "GreaterThan",
              "threshold": 80,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "[variables('vspAlertsDeploymentName')]",
      "dependsOn": ["[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app_alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "alertNamePrefix": {
            "value": "[variables('alertNamePrefix')]"
          },
          "actionGroupId": {
            "value": "[resourceId('Microsoft.Insights/actionGroups', variables('alertActionGroupName'))]"
          },
          "appServiceId": {
            "value": "[parameters('vspAppServiceId')]"
          },
          "appServicePlanId": {
            "value": "[parameters('vspAppServicePlanId')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
